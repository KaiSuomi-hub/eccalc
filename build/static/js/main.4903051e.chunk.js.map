{"version":3,"sources":["Form.js","App.js","reportWebVitals.js","index.js"],"names":["options","label","value","Form","props","state","a","b","c","d","result","ppm","updateA","e","setState","target","updateB","updateC","updateD","handleChange","bind","handleSubmit","event","this","alert","preventDefault","className","action","htmlFor","onChange","type","map","option","React","Component","defaultProps","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4903051e.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\nconst options = [\r\n{label:\"Canna Flores\",value: 0.5,},\r\n{label:\"Canna Vega\",value: 0.4,},\r\n{label:\"Biobizz Grow\", value: 0.2, },\r\n{label:\"Biobizz Bloom\", value: 0.1,},  \r\n{label:\"Biobizz Top\", value:0.0,},\r\n{label:\"AHF Grow\", value:0.2,},\r\n{label:\"AHF Micro\", value:0.4,},\r\n{label:\"AHF Bloom\", value:0.2,},\r\n{label:\"Terra Grow\", value:0.35,},\r\n{label:\"Terra Micro\", value:0.5,},\r\n{label:\"Terra Bloom\", value: 0.2,},\r\n{label:\"Remo Grow\", value: 0.3,},\r\n{label:\"Remo Micro\", value: 0.3,},\r\n{label:\"Remo Bloom\", value: 0.2,},\r\n];\r\nclass Form extends React.Component {\r\n  static defaultProps = { value: 0 };\r\n\r\n  static propTypes = { value: PropTypes.number };\r\n\r\n  state = { a: 0, b: 0, c: 0, d: 0 };\r\n\r\n  result = () => this.state.c * this.state.d / this.state.a + this.state.b + this.props.value;\r\n\r\n  ppm = () => this.result() * 700\r\n\r\n  updateA = e => this.setState({ a: +e.target.value });\r\n\r\n  updateB = e => this.setState({ b: +e.target.value });\r\n\r\n  updateC = e => this.setState({ c: +e.target.value });\r\n\r\n  updateD = e => this.setState({ d: +e.target.value });\r\n \r\n//select test\r\nconstructor(props) {\r\n    super(props);\r\n    this.state = {value: '0'};\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({value: event.target.value});\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    alert('Your favorite flavor is: ' + this.state.value);\r\n    event.preventDefault();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <div className=\"form\">\r\n        <h1>Add a substance</h1>\r\n            <form action=\"\">\r\n                <label htmlFor=\"litres\"> Water amount in liters </label><input  onChange={this.updateA} value={this.state.a} type=\"number\"   /><br />\r\n                <label htmlFor=\"waterec\">Water ec </label> <input onChange={this.updateB} value={this.state.b} type=\"number\"  /><br />\r\n                <label htmlFor=\"nute\">Nute ml</label> <input onChange={this.updateC} value={this.state.c} type=\"number\"  /> <br/>\r\n                <label htmlFor=\"nute\">Nute ec</label> <input  onChange={this.updateD} value={this.state.d} type=\"number\" /><br/>\r\n          <select>\r\n            \r\n                {options.map((option) => (\r\n                    <option onChange={this.updateD} value={option.value}>{option.label}</option>))}\r\n                </select>\r\n                </form>\r\n            <br />\r\n            <br />\r\n            <p className=\"tulos\">Total EC: {this.result()}</p>\r\n            <p className=\"tulos\">Total PPM: {this.ppm()}</p>\r\n         \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;","import './App.css';\r\nimport Form from './Form';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Form/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}